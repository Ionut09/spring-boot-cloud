spring:
  datasource:
    username: bad-user
#    password: secret-pass
    url: jdbc:mysql://localhost:3321/jpa?serverTimezone=EET
  cloud:
    stream:
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
#  docker run -d --hostname rabbitmq -p 5672:5672 -p 5673:5673 -p 15672:15672 --name rabbitmq rabbitmq:3.8-management
#  docker start/stop rabbitmq
              rabbitmq:
                host: localhost
                port: 5672
                username: guest
                password: guest
                virtual-host: /
      rabbit:
        bindings:
          singer-input:
            consumer:
              autoBindDlq: true
              queueNameGroupOnly: true
      bindings:
        singer-input:
          consumer.concurrency: 5
          destination: exchange.spring-cloud-example.singer
          group: queue.spring-cloud-example.singer
        singer-output:
          destination: exchange.spring-cloud-example.singer
      default-binder: rabbit

  rabbitmq:
    host: ${spring.cloud.stream.binders.rabbit.environment.spring.rabbitmq.host}
    port: ${spring.cloud.stream.binders.rabbit.environment.spring.rabbitmq.port}
    username: ${spring.cloud.stream.binders.rabbit.environment.spring.rabbitmq.username}
    password: ${spring.cloud.stream.binders.rabbit.environment.spring.rabbitmq.password}
    virtual-host: ${spring.cloud.stream.binders.rabbit.environment.spring.rabbitmq.virtual-host}

com:
  gohenry:
    firebase:
      url: http://firebase
      user: Peter
    mysql:
      schema: schema
      host: 122.72.21.2
      port: 3306
    test: "don't testing our app"